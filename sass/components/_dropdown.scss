@use "../abstracts" as *;

.dropdownMenu {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    z-index: 1;
    max-width: 95vw;
}

.backgroundColor {
    &--1 {background-color: $color-1;}
    &--2 {background-color: $color-2;}
    &--3 {background-color: $color-3;}
}

.textShadow {
    &--1 {text-shadow: 0px 0.5px 3px darken($color-1, 60%);}
    &--2 {text-shadow: 0px 0.5px 3px darken($color-2, 60%);}
    &--3 {text-shadow: 0px 0.5px 3px darken($color-3, 60%);}
}

.dropdownListItem {
    display: grid;
    height: 69px;
    flex-basis: 170px;
    max-width: 100%;
    border-radius: 5px;
    color: $color-text-white;
    align-items: center;
    grid-template-columns: 80% 20%;

    //Specific children of dropdown//
    & > :is(input, label) {
        grid-column: 1/3;
        grid-row: 1/-1;
        font-weight: 700;
    }
    & > :is(input, label, menu) {
        font-size: 19px;
        padding: 19px;
    }
    & > :is(input, label) {
        height: inherit;
    }
    &:focus-within > label {
        opacity: 0;
        z-index: -1;
    }
    &:focus-within > input {
        grid-column: 1/2;
    }

    &:focus-within > input::placeholder {
        opacity: 1;
    }
    &:not(:focus-within) > input::placeholder {
        opacity: 0;
    }
    &:not(:focus-within) > input {
        opacity: 0;
        width: 100%;
        z-index: 6;
    }

    //Children of dropdown//
    & > input {
        color: inherit;
        background-color: transparent;
        z-index: 3;
        padding-right: 0px;
        cursor: pointer;
        &:focus {
            cursor: text;
        }
        &::placeholder {
            color: $color-text-white;
            font-weight: 400;
            @include smallScreen{
                font-size: 18px;
            }
        }
        &:focus-within::placeholder{
            opacity: 1;
        }
    }
    & > label{
        display: flex;
        justify-content: left;
        align-items: center;
        & > span {
            font-weight: 900;
        }
    }
    & > label {
        display: flex;
        justify-content: left;
        align-items: center;
        opacity: 1;
        z-index: 1;
        & > span {
            font-weight: 900;
        }
    }
    & > .arrowButton {
        z-index: 3;
        grid-column: 2/3;
        grid-row: 1/-1;
        padding-right: 19px;
        height: 100%;
        display: grid;
        margin-left: auto;
        background-color: transparent;
        cursor: pointer;
        & > img {
            width: 16px;
            align-self: center;
            justify-self: center;
            cursor: pointer;
        }
    }
    & > menu {  
        grid-column: span 2;
        grid-row: 2;
        grid-template-columns: repeat(3, minmax(max-content, 1fr));
        gap: 1rem 3rem;
        justify-content: space-between;
        justify-items: left;
        width: 100%;
        background-color: inherit;
        border-radius: 0px 0px 5px 5px;
        transform: translateY(-5px);
        z-index: 4;
        @include smallScreen {
            grid-template-columns: 1fr;
        }
        @include mediumToLargeScreen {
            grid-template-columns: repeat(2, minmax(max-content, 1fr));
        }
        &:hover {
            display: grid;
        }
        &[data-state="closed"]{
            display: none;
        }
        &[data-state="open"]{
            display: grid;
        }
        & > li:where(.notHidden) {
            background-color: inherit;
            width: 100%;
            cursor: pointer;
            &:hover {
                text-shadow: 0px 0.5px 5px $color-text-black;
            }
            &:focus {
                outline-offset: 5px;
                border-radius: 5px;
                outline: 2px solid $color-text-white;
            }
        }
        & > li.hidden {
            display: none;
        }
        & > li.tagged {
            display: none;
        }
    }
    & > menu[data-error]::before {
        content: attr(data-error);
    }
    & > menu[data-empty]::after {
        content: attr(data-empty);
    }
    & > menu[data-error]::before,
        menu[data-empty]::after {
        font-size: 1rem;
        color: $color-text-black;
        grid-column: span 3;
        display: none;
    }
    & > menu[data-error-visible="true"]::before,
        menu[data-empty-visible="true"]::after {
        display: block;
    }
}

img[data-state="up"]{
    transform: rotate(180deg);
}
